server:
  port: 8070

spring:
  application:
    name: accounts
  config:
    import: 'optional:consul:'

  cloud:
    consul:
      host: localhost           # Адрес Consul-агента (по умолчанию localhost)
      port: 8500
      config:
        enabled: true
        format: YAML
        prefix: config
        defaultContext: application
      discovery:
        instance-id: ${spring.application.name}
        preferIpAddress: false   # Использовать IP адрес вместо имени хоста
        health-check-path: /actuator/health
        healthCheckInterval: 15s
        heartbeat:
          enabled: true

  datasource:
    driverClassName: org.postgresql.Driver
    #url: jdbc:postgresql://db:5432/bankapp # Для запуска в Docker
    url: jdbc:postgresql://localhost:5432/bankapp # Для запуска локально
    username: s
    password: sa

    jpa:
      generate-ddl: true
      hibernate:
        ddl-auto: create
        #ddl-auto: none

      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
          format_sql: true

  security:
    oauth2:
      resourceserver:
        jwt:
          # Ниже - адрес сервера авторизации для получения токена
          issuer-uri: ${issuer-uri}
          #issuer-uri: http://localhost:8080/realms/master # Для запуска локально
          #issuer-uri: http://keycloak:8080/realms/master # Для запуска в Docker
      client:
        provider:
          keycloak:
            # Ниже - адрес сервера авторизации для получения токена
            issuer-uri: ${issuer-uri}
            #issuer-uri: http://localhost:8080/realms/master # Для запуска локально
            #issuer-uri: http://keycloak:8080/realms/master # Для запуска в Docker
        registration:
          accounts: # Описание клиента OAuth2
            provider: keycloak
            authorizationGrantType: client_credentials
            client-id: accounts
            client-secret: cqvRnkAwGQMMsl27GqHCy4Ke3YwBKSOE
            scope: profile
            clientAuthenticationMethod: client_secret_post # Способ передачи секрета

  sql:
    init:
      mode: always

resilience4j:
  circuitbreaker:
    instances:
      accounts:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 30s
  retry:
    instances:
      responseFromModule:
        maxRetryAttempts: 5
        waitDuration: 5s

#Настройки ниже - для запуска без Consul
#module-notifications: http://localhost:8091/

#Настройки ниже - для запуска в Consul, но без использования consul.config
#(при использовании consul.config для настроек ниже нужно создать папку config/application/consul и скопировать весь раскомментированный блок ниже туда
#module-notifications: http://notifications/