  # Default values for accounts-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: accounts-service # Default to local image name
  pullPolicy: Never # IfNotPresent      # Default to IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest
#  tag: "0.0.1-SNAPSHOT"         # Default tag matching build

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount token
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8070 # Default port, overridden by umbrella

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  hosts:
    - host: accounts.test.local # значение по умолчанию, переопределяется при деплое в prod
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
#  database_url: "jdbc:postgresql://postgres-postgresql.{{ .Release.Namespace }}.svc.cluster.local:5432/mydb"
#  database_username: "s"

  SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-postgresql:5432/bankapp
  SPRING_DATASOURCE_USERNAME: s
  SPRING_DATASOURCE_PASSWORD: sa
  SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/master
  SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/master
  SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_ACCOUNTS_CLIENT_ID: accounts
  SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_ACCOUNTS_CLIENT_SECRET: cqvRnkAwGQMMsl27GqHCy4Ke3YwBKSOE

  MANAGEMENT_HEALTH_LIVENESSSTATE_ENABLED: "true"
  MANAGEMENT_HEALTH_READINESSSTATE_ENABLED: "true"
  MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED: "true"
  MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "health,livenessstate,readinessstate"
  SPRING_SECURITY_ENABLED: "false"
  SPRING_SECURITY_FILTER_DISPATCHER_TYPES_ASYNC_SUPPORTED: "true"
  SPRING_SECURITY_ENABLED: "false"
  MANAGEMENT_SECURITY_ENABLED: "false"

#  SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://bank-service.keycloak.svc.cluster.local:8080/realms/master
#  SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://bank-service.keycloak.svc.cluster.local:8080/realms/master
