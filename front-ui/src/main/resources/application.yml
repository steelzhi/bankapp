server:
  port: 8081

spring:
  application:
    name: front-ui
  config:
    import: 'optional:consul:'

  cloud:
    consul:
      host: localhost           # Адрес Consul-агента (по умолчанию localhost)
      port: 8500
      config:
        enabled: true            # Включаем Consul Config для внешней конфигурации
        format: YAML
        prefix: config           # Префикс в KV-хранилище Consul (по умолчанию "config")
        defaultContext: application  # Контекст по умолчанию
        import-check:
          enabled: false
        profileSeparator: '::'
      discovery:
        ip-address: localhost
#        instance-id: ${spring.application.name}:${random.value}
        instance-id: ${spring.application.name}
        #preferIpAddress: true
        preferIpAddress: false   # Использовать IP адрес вместо имени хоста
        health-check-url: http://localhost:${server.port}/actuator/health
        health-check-path: /actuator/health
        heartbeat:
          enabled: true       # Отключаем Heartbeat (необязательно)

  security:
    oauth2:
      client:
        provider:
          keycloak:
            # Ниже - адрес сервера авторизации для получения токена
            issuer-uri: http://localhost:8080/realms/master # Для запуска локально
            #issuer-uri: http://keycloak:8080/realms/master # Для запуска в Docker
        registration:
          front-ui: # Описание клиента OAuth2
            provider: keycloak
            authorizationGrantType: client_credentials
            client-id: front-ui
            client-secret: BZSkEMkx2BETc6WB6XXV5nHG2BfAcY48
            scope: profile
            clientAuthenticationMethod: client_secret_post # Способ передачи секрета

module-accounts: http://localhost:8090/
module-cash: http://localhost:8092/
module-exchange-generator: http://localhost:8094/
module-transfer: http://localhost:8096/
#module-accounts: http://accounts/
#module-cash: http://cash/
#module-exchange-generator: http://exchange-generator/
#module-transfer: http://transfer/