server:
  port: 8092

spring:
  application:
    name: cash

  security:
    oauth2:
      resourceserver:
        jwt:
          # Ниже - адрес сервера авторизации для получения токена
          #issuer-uri: http://localhost:8080/realms/master # Для запуска локально
          #issuer-uri: http://keycloak:8080/realms/master # Для запуска в Docker
          issuer-uri: ${keycloak-location}
      client:
        provider:
          keycloak:
            # Ниже - адрес сервера авторизации для получения токена
            #issuer-uri: http://localhost:8080/realms/master # Для запуска локально
            #issuer-uri: http://keycloak:8080/realms/master # Для запуска в Docker
            issuer-uri: ${keycloak-location}
        registration:
          cash: # Описание клиента OAuth2
            provider: keycloak
            authorizationGrantType: client_credentials
            client-id: cash
            client-secret: 6UMxwxzxhq3YRamkTEGx4MdEMxPL938n
            scope: profile
            clientAuthenticationMethod: client_secret_post # Способ передачи секрета

#Настройки ниже - для запуска без Consul
#module-accounts: http://localhost:8090/
#module-notifications: http://localhost:8091/
#module-blocker: http://localhost:8093/

#Настройки ниже - для запуска в Consul, но без использования consul.config
#(при использовании consul.config для настроек ниже нужно создать папку config/application/consul и скопировать весь раскомментированный блок ниже туда
#module-accounts: http://accounts/
#module-notifications: http://notifications/
#module-blocker: http://blocker/

#Настройки ниже - для K8s
#module-accounts: http://accounts.myapp.local/
#module-notifications: http://notifications.myapp.local/
#module-blocker: http://blocker.myapp.local/

keycloak-location: http://keycloak:8080/realms/master
module-accounts: http://accounts:8070/
module-notifications: http://notifications:8091/
module-blocker: http://blocker:8093/
