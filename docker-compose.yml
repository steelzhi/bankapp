name: bank

services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.3
#    image: sleighzy/keycloak
#    image: bitnami/keycloak:20.0.5-debian-11-r13
#	22.0.1-debian-11-r20
#	21.1.1-debian-11-r20
#	20.0.5-debian-11-r13    
    container_name: keycloak
    ports:
      - "8080:8080"
#      - "8443:8443"
#      - "9000:9000"

    environment:
      - KC_PORT=8080
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT_BACKCHANNEL=false
      - KEYCLOAK_ADMIN_USER=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_DATABASE_VENDOR=dev-mem
#     - KEYCLOAK_EXTRA_ARGS: --import-realm

    volumes:
      - ./:/project:ro

    restart: unless-stopped
    command:
      - start-dev


  keycloak-hc1: # Healthcheck sidecar because Keycloak container lacks curl and even package manager
    container_name: keycloak-hc1
    hostname: keycloak-hc1
    image: alpine/curl
    depends_on:
      - keycloak
    command: ash -c "date; apk add bash && sleep infinity"
    restart: unless-stopped
    healthcheck:
      test: /utils/test_ports.sh
      start_period: 30s
      interval: 7s
      timeout: 5s
      retries: 20
    volumes:
      - ./utils:/utils:ro

  keycloak-hc2: # Loads json clients into Keycloak
    container_name: keycloak-configurator
    image: docker:cli
    depends_on:
      keycloak-hc1:
        condition: service_healthy
    command: ash -c "date; apk add --no-cache bash curl jq && sleep 5s && /utils/load_json_clients.sh && sleep 5s && date"
#    healthcheck:
#      start_period: 15s
#      interval: 7s
#      timeout: 5s
#      retries: 5
#      test: /utils/test_clients.sh
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./utils:/utils:ro
      - ./:/project:ro
#    tty: true
#    stdin_open: true

  accounts:
    build: accounts/
    ports:
      - "8070:8070"
    depends_on:
      db:
        condition: service_started
      notifications:
        condition: service_started
      keycloak-hc2:
#        condition: service_healthy
        condition: service_completed_successfully
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/bankapp
      - SPRING_DATASOURCE_USERNAME=s
      - SPRING_DATASOURCE_PASSWORD=sa
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/master
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/master
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_ACCOUNTS_CLIENT_ID=accounts
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_ACCOUNTS_CLIENT_SECRET=cqvRnkAwGQMMsl27GqHCy4Ke3YwBKSOE
#       - SPRING_CLOUD_CONSUL_HOST=consul
#       - SPRING_CLOUD_CONSUL_PORT=8500

  blocker:
    build: blocker/
    ports:
     - "8093:8093"
    depends_on:
      keycloak-hc2:
#        condition: service_healthy
        condition: service_completed_successfully
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/master
      - SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/master
#      - keycloak-location=http://keycloak:8080
#      - KEYCLOAK_LOCATION=http://keycloak:8080
#      - SPRING_CLOUD_CONSUL_HOST=consul
#      - SPRING_CLOUD_CONSUL_PORT=8500

  cash:
    build: cash/
    ports:
      - "8092:8092"
    depends_on:
      notifications:
        condition: service_started
      accounts:
        condition: service_started
      blocker:
        condition: service_started
      keycloak-hc2:
#        condition: service_healthy
        condition: service_completed_successfully
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/master
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/master
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_CASH_CLIENT_ID=cash
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_CASH_CLIENT_SECRET=6UMxwxzxhq3YRamkTEGx4MdEMxPL938n
#      - SPRING_CLOUD_CONSUL_HOST=consul
#      - SPRING_CLOUD_CONSUL_PORT=8500

  exchange:
    build: exchange/
    ports:
      - "8095:8095"
    depends_on:
      exchange-generator:
        condition: service_started
      keycloak-hc2:
#        condition: service_healthy
        condition: service_completed_successfully
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/master
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/master
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_EXCHANGE_CLIENT_ID=exchange
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_EXCHANGE_CLIENT_SECRET=2VgTnsgA6i8dGoZPrJi8pk5ePDQK2oAp
 
      - SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/master
#      - keycloak-location=http://keycloak:8080
#      - KEYCLOAK_LOCATION=http://keycloak:8080
      
#      - SPRING_CLOUD_CONSUL_HOST=consul
#      - SPRING_CLOUD_CONSUL_PORT=8500

  exchange-generator:
    build: exchange-generator/
    ports:
      - "8094:8094"
    depends_on:
      keycloak-hc2:
#        condition: service_healthy
        condition: service_completed_successfully
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/master
#      - SPRING_CLOUD_CONSUL_HOST=consul
#      - SPRING_CLOUD_CONSUL_PORT=8500

  front-ui:
    build: front-ui/
    ports:
      - "8081:8081"
    depends_on:
      accounts:
        condition: service_started
      notifications:
        condition: service_started
      exchange-generator:
        condition: service_started
      keycloak-hc2:
#        condition: service_healthy
        condition: service_completed_successfully

    environment:
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/master
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_FRONT_UI_CLIENT_ID=front-ui
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_FRONT_UI_CLIENT_SECRET=BZSkEMkx2BETc6WB6XXV5nHG2BfAcY48
#      - SPRING_CLOUD_CONSUL_HOST=consul
#      - SPRING_CLOUD_CONSUL_PORT=8500

  notifications:
    build: notifications/
    ports:
      - "8091:8091"
    depends_on:
      keycloak-hc2:
#        condition: service_healthy
        condition: service_completed_successfully

    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/master
      - SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/master
#      - SPRING_CLOUD_CONSUL_HOST=consul
#      - SPRING_CLOUD_CONSUL_PORT=8500

  transfer:
    build: transfer/
    ports:
      - "8096:8096"
    depends_on:
      notifications:
        condition: service_started
      accounts:
        condition: service_started
      exchange:
        condition: service_started
      blocker:
        condition: service_started
      keycloak-hc2:
#        condition: service_healthy
        condition: service_completed_successfully
        
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/master
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/master
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_TRANSFER_CLIENT_ID=transfer
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_TRANSFER_CLIENT_SECRET=J0sumPuRH63sy9pgcLpPFfXnbhcmp2Xz
#      - SPRING_CLOUD_CONSUL_HOST=consul
#      - SPRING_CLOUD_CONSUL_PORT=8500

  db:
    image: postgres:13.7-alpine
    ports:
      - "6541:5432"
    environment:
      - POSTGRES_USER=s
      - POSTGRES_PASSWORD=sa
      - POSTGRES_DB=bankapp